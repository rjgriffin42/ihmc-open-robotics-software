plugins {
   id 'us.ihmc.gradle.ihmc-build' version '0.0.14'
}

if(!rootProject.name.equals('IHMCOpenRoboticsSoftware')) { evaluationDependsOn(':IHMCOpenRoboticsSoftware') }

sourceCompatibility = 1.7
version = "${getOpenRoboticsSoftwareProject().version}"
project.ext.fullVersion = "${getOpenRoboticsSoftwareProject().ext.fullVersion}"
project.ext.vcsUrl = "${getOpenRoboticsSoftwareProject().ext.vcsUrl}"
project.ext.licenseURL = "http://www.apache.org/licenses/LICENSE-2.0.txt"
project.ext.licenseName = "Apache License, Version 2.0"
project.ext.bintrayLicenseName = "Apache-2.0"


repositories ihmc.ihmcDefaultArtifactProxies()

repositories {
	maven {
		url "https://bengal.ihmc.us/nexus/content/repositories/thirdparty/"
	}
}

repositories {
   mavenLocal()
   jcenter()
   mavenCentral()
}

def strings = ['ihmc', 'robotics']
ihmc.configureForIHMCOpenSourceBintrayPublish(false, "mavenJava", "ihmc-robotics-releases", strings)

dependencies {
	testCompile group: 'junit', name: 'junit', version: '4.11'

    compile group: 'javax.vecmath', name: 'vecmath', version: '1.5.2'
    compile group: 'com.github.quickhull3d', name: 'quickhull3d', version: '1.0.0'
    compile group: 'us.ihmc.thirdparty.org.opencv', name: 'opencv', version: '3.1.0'

	compile ihmc.getProjectDependency(":IHMCCommunication")
    compile ihmc.getProjectDependency(":IHMCROSTools")
	compile ihmc.getProjectDependency(":IHMCWholeBodyController")
    compile ihmc.getProjectDependency(":SensorProcessing")
    compile ihmc.getProjectDependency(":SDFLoader")
    compile ihmc.getProjectDependency(":IHMCJavaToolkit")
    compile ihmc.getProjectDependency(":IHMCRoboticsToolkit")
    testCompile ihmc.getProjectDependency(":IHMCUnitTesting")
}
jar {
    manifest {
        attributes(
                "Created-By": "IHMC Gradle Build Script",
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": "IHMC",

                "Bundle-Name": project.name,
                "Bundle-Version": project.version,
                "Bundle-License": "${project.ext.licenseURL}",
                "Bundle-Vendor": "IHMC")
    }
}
