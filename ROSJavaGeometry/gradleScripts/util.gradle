gradle.allprojects {
    ext {
        setupDefaultDirectoryStructure = {
            apply from: 'gradleScripts/structure.gradle'
        }

        setupDefaultRepositories = {
            apply from: 'gradleScripts/repositories.gradle'
        }

        getPlatformDependentSWTDependency = {
            getSWTJarName()
        }

        setupProjectSpecificDependencies = {
            apply from: 'gradleScripts/dependencies.gradle'
        }
    }
}

/**
 * See: https://code.google.com/p/swt-repo/
 * @return
 */
def private String getSWTJarName()
{
    String prefix = "org.eclipse.swt";

    if(is64bit())
    {
        if(isOSX())
        {
            return prefix + ".cocoa.macosx.x86_64";
        }

        if(isWindows())
        {
            return prefix + ".win32.win32.x86_64";
        }

        if(isLinux())
        {
            return prefix + ".gtk.linux.x86_64";
        }

        throw new RuntimeException("Bad OS configuration for SWT");
    }
    else
    {
        if(isOSX())
        {
            return prefix + ".cocoa.macosx";
        }

        if(isWindows())
        {
            return prefix + ".win32.win32.x86";
        }

        if(isLinux())
        {
            return prefix + ".gtk.linux.x86";
        }

        throw new RuntimeException("Bad OS configuration for SWT");
    }
}

def private boolean isOSX()
{
    String osLowerCase = System.getProperty("os.name").toLowerCase();
    return osLowerCase.contains("mac");
}

def private boolean isLinux()
{
    String osLowerCase = System.getProperty("os.name").toLowerCase();
    return osLowerCase.contains("nix") || osLowerCase.contains("nux") || osLowerCase.contains("aix");
}

def private boolean isWindows()
{
    String osLowerCase = System.getProperty("os.name").toLowerCase();
    return osLowerCase.contains("win");
}

def private boolean is64bit()
{
    String arch = System.getProperty("os.arch");

    return arch.contains("64");
}