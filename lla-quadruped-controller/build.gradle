buildscript {
   repositories {
      maven { url "https://plugins.gradle.org/m2/" }
      mavenLocal()
   }
   dependencies {
      classpath "gradle.plugin.us.ihmc:ihmc-build:0.7.15"
   }
}
apply plugin: "us.ihmc.ihmc-build"

ihmc {
   loadProductProperties("../product.properties")
   
   configureDependencyResolution()
   configurePublications()
}

testSuites {
   def prefix = "LIBS-IHMCOPENROBOTICSSOFTWARE"
   bambooPlanKeys = [prefix + "FAST", prefix + "INDEVELOPMENT", prefix + "UI", prefix + "VIDEO"]
   disableBambooConfigurationCheck = true
}

mainDependencies {
   compile group: 'us.ihmc', name: 'euclid-core', version: '0.4.6'
   compile group: 'us.ihmc', name: 'ihmc-yovariables', version: '0.2.2'
   compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
   compile group: 'us.ihmc', name: 'ihmc-commons', version: '0.11.2'
   compile group: "us.ihmc", name: "ihmc-quadruped-robotics", version: groupDependencyVersion
   compile group: "us.ihmc", name: "ihmc-java-toolkit", version: groupDependencyVersion
   compile group: "us.ihmc", name: "ihmc-java-extensions", version: groupDependencyVersion
   //compile group: "us.ihmc", name: "ihmc-robotics-toolkit", version: groupDependencyVersion
   compile group: "us.ihmc", name: "ihmc-communication", version: groupDependencyVersion
   compile group: "us.ihmc", name: "ihmc-model-file-loader", version: groupDependencyVersion
   compile group: "us.ihmc", name: "ihmc-humanoid-robotics", version: groupDependencyVersion
   compile group: "us.ihmc", name: "ihmc-state-estimation", version: groupDependencyVersion
   compile group: "us.ihmc", name: "ihmc-graphics-description", version: groupDependencyVersion
   compile group: "us.ihmc", name: "ihmc-sensor-processing", version: groupDependencyVersion
   compile group: "us.ihmc", name: "ihmc-robot-description", version: groupDependencyVersion
   compile group: "us.ihmc", name: "ihmc-robot-models", version: groupDependencyVersion
}

testDependencies {
   compile group: 'us.ihmc', name: 'ihmc-continuous-integration-framework', version: '0.9.4'
   compile group: 'junit', name: 'junit', version: '4.11'
   compile group: 'us.ihmc', name: 'ihmc-commons-testing', version: '0.11.2'
   compile group: "us.ihmc", name: "ihmc-robotics-toolkit-test", version: groupDependencyVersion
   compile group: "us.ihmc", name: "ihmc-java-extensions-test", version: groupDependencyVersion
}

//// Do not disable/remove this block to make your compile work. It will break the Quarduped deployment infrastructure.
//afterEvaluate {
//   project.configurations.runtime.each {
//      if (it.name.contains("SimulationConstructionSet") || it.name.contains("IHMCJMonkeyEngineToolkit"))
//      {
//         throw new GradleException("LLAQuardupedController cannot depend on SimulationConstructionSet in order to optimize Ahead-of-Time compilation. Please fix your dependency graph. Note that compile dependencies are fine.")
//      }
//   }
//}
//
//jar {
//   List depend = []
//   configurations.runtime.each {
//      depend.add('lib/' + it.name)
//   }
//
//   manifest {
//      attributes(
//            "Created-By": "IHMC Gradle Build Script",
//            "Implementation-Title": project.name,
//            "Implementation-Version": project.version,
//            "Implementation-Vendor": "IHMC",
//
//            "Bundle-Name": project.name,
//            "Bundle-Version": project.version,
//            "Bundle-License": ihmc.licenseURL,
//            "Bundle-Vendor": "IHMC",
//            'Class-Path': depend.join(' '))
//   }
//}
//
//task install(dependsOn: ['jar']) {
//   doLast {
//      def projectDir = project.buildscript.sourceFile.parent
//
//      File dest = new File(project.rootDir, 'install')
//
//      File libdest = new File(dest, 'lib')
//      dest.mkdir();
//      libdest.mkdir();
//
//
//      configurations.runtime.each {
//         def fileToCopy = it.toString()
//         copy {
//            from fileToCopy
//            into libdest
//         }
//      }
//
//      copy {
//         from jar.archivePath
//         into dest
//         rename(jar.archiveName, 'LLAQuadrupedController.jar')
//      }
//
//      File scriptDir = new File(projectDir, "launchScripts/local")
//      copy {
//         from scriptDir
//         into dest
//      }
//   }
//}
