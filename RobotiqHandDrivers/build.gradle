plugins {
   id 'us.ihmc.gradle.ihmc-build' version '0.0.11'
}



if(!rootProject.name.equals('IHMCOpenRoboticsSoftware')) { evaluationDependsOn(':IHMCOpenRoboticsSoftware') }

sourceCompatibility = 1.7
version = "${getOpenRoboticsSoftwareProject().version}"
project.ext.fullVersion = "${getOpenRoboticsSoftwareProject().ext.fullVersion}"
project.ext.vcsUrl = "${getOpenRoboticsSoftwareProject().ext.vcsUrl}"
project.ext.licenseURL = "http://gnu.org/licenses/gpl-3.0.txt"
project.ext.licenseName = "GPLv3"
project.ext.bintrayLicenseName = "GPL-3.0"

apply plugin: 'application'

repositories {
	maven {
	    url "https://github.com/rosjava/rosjava_mvn_repo/raw/master"
	}
}
repositories ihmc.ihmcDefaultArtifactProxies()

def strings = ['ihmc', 'robotics']
ihmc.configureForIHMCOpenSourceBintrayPublish(false, "mavenJava", "ihmc-robotics-releases", strings)

dependencies {
	compile group: 'com.martiansoftware', name: 'jsap', version: '2.1'
	compile group: 'net.wimpi', name: 'jamod', version: '1.2'


	compile ihmc.getProjectDependency(":DarpaRoboticsChallenge")
	compile ihmc.getProjectDependency(":CommonWalkingControlModules")
	compile ihmc.getProjectDependency(":IHMCCommunication")
	compile ihmc.getProjectDependency(":SDFLoader")
	compile ihmc.getProjectDependency(":SimulationConstructionSet")
	compile ihmc.getProjectDependency(":IHMCWholeBodyController")
	compile ihmc.getProjectDependency(":IHMCJavaToolkit")
	compile ihmc.getProjectDependency(":IHMCRoboticsToolkit")
	testCompile ihmc.getProjectDependency(":IHMCUnitTesting")
}
applicationName = 'RobotiqControlThread'
mainClassName = 'us.ihmc.robotiq.control.RobotiqControlThread'

applicationDistribution.from(file("IHMCNetworkParameters.ini")) {
    into "bin"
}

jar {
    manifest {
        attributes(
                "Created-By": "IHMC Gradle Build Script",
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": "IHMC",

                "Bundle-Name": project.name,
                "Bundle-Version": project.version,
                "Bundle-License": "${project.ext.licenseURL}",
                "Bundle-Vendor": "IHMC")
    }
}
