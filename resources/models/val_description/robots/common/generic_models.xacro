<?xml version="1.0" ?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="generic_models">

  <xacro:macro name="v1_actuator" params="name api">
    <actuator name="${name}" type="${api}"/>
  </xacro:macro>

  <xacro:macro name="standard_link" params="name mass origin_rpy origin_xyz ixx ixy ixz iyy iyz izz visual_mesh material collision_mesh">
    <link name="${name}">
      <inertial>
        <mass value="${mass}"/>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${ixx}" ixy="${ixy}" ixz="${ixz}" 
                 iyy="${iyy}" iyz="${iyz}"
                 izz="${izz}" />
        </inertial>  
        <visual>
          <geometry>
            <mesh filename="${visual_mesh}"/>
          </geometry>
          <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
          <material name="${material}"/>
        </visual>
        <collision>
        <geometry>
          <mesh filename="${collision_mesh}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
    </link>
<!--    <gazebo reference="${name}">
      <material>Gazebo/${material}</material>
    </gazebo> -->
  </xacro:macro>

  <xacro:macro name="cylinder_link" params="name radius length mass origin_xyz origin_rpy visual_mesh material collision_mesh">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${mass*(3*radius*radius + length*length)/12}" ixy="0.0" ixz="0.0"
                 iyy="${mass*(3*radius*radius + length*length)/12}" iyz="0.0"
                 izz="${0.5*mass*radius*radius}" />
      </inertial>
      <visual>
        <geometry>
          <mesh filename="${visual_mesh}"/>
          <!-- <cylinder radius="${radius}" length="${length}"/> -->
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <!-- <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/> -->
        <material name="${material}"/>
      </visual>
      <collision>
        <geometry>
          <mesh filename="${collision_mesh}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
    </link>
    <gazebo reference="${name}">
      <material>Gazebo/${material}</material>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="cylinder_link_no_mesh" params="name radius length mass origin_xyz origin_rpy">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${mass*(3*radius*radius + length*length)/12}" ixy="0.0" ixz="0.0"
                 iyy="${mass*(3*radius*radius + length*length)/12}" iyz="0.0"
                 izz="${0.5*mass*radius*radius}" />
      </inertial>
      <visual>
        <geometry>
          <cylinder radius="${radius}" length="${length}"/>
        </geometry>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <material name="Gray"/>
      </visual>
    </link>
  </xacro:macro>

  <xacro:macro name="box_link" params="name width height depth mass origin_xyz origin_rpy visual_mesh material collision_mesh">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${(mass*(height*height + depth*depth))/12}"  ixy="0.0" ixz="0.0"
                 iyy="${(mass*(width*width + depth*depth))/12}" iyz="0.0"
                 izz="${(mass*(width*width + height*height))/12}" />
      </inertial>
      <visual>
        <geometry>
          <mesh filename="${visual_mesh}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <material name="${material}"/>
      </visual>
      <collision>
        <geometry>
          <mesh filename="${collision_mesh}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
    </link>
<!--    <gazebo reference="${name}">
      <material>Gazebo/${material}</material>
    </gazebo> -->
  </xacro:macro>

  <xacro:macro name="box_link_primitive_collision_origin_offset" params="name width height depth mass origin_xyz origin_rpy visual_mesh material origin_offset_xyz origin_offset_rpy">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${(mass*(height*height + depth*depth))/12}"  ixy="0.0" ixz="0.0"
                 iyy="${(mass*(width*width + depth*depth))/12}" iyz="0.0"
                 izz="${(mass*(width*width + height*height))/12}" />
      </inertial>
      <visual>
        <geometry>
          <mesh filename="${visual_mesh}"/>
        </geometry>
        <origin rpy="${origin_offset_rpy}" xyz="${origin_offset_xyz}"/>
        <material name="${material}"/>
      </visual>
      <collision>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <geometry>
          <box size="${width} ${height} ${depth}"/>
        </geometry>
      </collision>
    </link>
    <gazebo reference="${name}">
      <material>Gazebo/${material}</material>
    </gazebo>
  </xacro:macro>


  <xacro:macro name="box_link_primitive_collision" params="name width height depth mass origin_xyz origin_rpy visual_mesh material">
    <xacro:box_link_primitive_collision_origin_offset name="${name}"
                    width="${width}" height="${height}" depth="${depth}" mass="${mass}"
                    origin_rpy="${origin_rpy}"
                    origin_xyz="${origin_xyz}"
                    visual_mesh="${visual_mesh}"
                    material="${material}"
                    origin_offset_xyz="0 0 0"
                    origin_offset_rpy="0 0 0"/>
  </xacro:macro>

  <xacro:macro name="box_link_inertia" params="name mass origin_xyz origin_rpy ixx iyy izz visual_mesh visual_mesh_scale material collision_mesh collision_mesh_scale">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${ixx}"  ixy="0.0" ixz="0.0"
                 iyy="${iyy}" iyz="0.0"
                 izz="${izz}" />
      </inertial>
      <visual>
        <geometry>
          <mesh filename="${visual_mesh}" scale="${visual_mesh_scale}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <material name="${material}"/>
      </visual>
      <collision>
        <geometry>
          <mesh filename="${collision_mesh}" scale="${collision_mesh_scale}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
    </link>
    <gazebo reference="${name}">
      <material>Gazebo/${material}</material>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="box_link_no_mesh" params="name width height depth mass origin_xyz origin_rpy">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${(mass*(height*height + depth*depth))/12}"  ixy="0.0" ixz="0.0"
                 iyy="${(mass*(width*width + depth*depth))/12}" iyz="0.0"
                 izz="${(mass*(width*width + height*height))/12}" />
      </inertial>
      <visual>
        <geometry>
          <box size="${width} ${height} ${depth}"/>
        </geometry>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <material name="Gray"/>
      </visual>
      <collision>
        <geometry>
          <box size="${width} ${height} ${depth}"/>
        </geometry>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      </collision>
    </link>
  </xacro:macro>

  <xacro:macro name="link_no_mesh" params="name width height depth mass origin_xyz origin_rpy ixx ixy ixz iyy iyz izz">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${ixx}"  ixy="${ixy}" ixz="${ixz}"
                 iyy="${iyy}" iyz="${iyz}"
                 izz="${izz}" />
      </inertial>
      <visual>
        <geometry>
          <box size="${width} ${height} ${depth}"/>
        </geometry>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <material name="Gray"/>
      </visual>
      <collision>
        <geometry>
          <box size="${width} ${height} ${depth}"/>
        </geometry>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      </collision>
    </link>
  </xacro:macro>


  <xacro:macro name="box_link_no_collision" params="name width height depth mass origin_xyz origin_rpy visual_mesh material">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${(mass*(height*height + depth*depth))/12}"  ixy="0.0" ixz="0.0"
                 iyy="${(mass*(width*width + depth*depth))/12}" iyz="0.0"
                 izz="${(mass*(width*width + height*height))/12}" />
      </inertial>
      <visual>
        <geometry>
          <mesh filename="${visual_mesh}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <material name="${material}"/>
      </visual>
    </link>
    <gazebo reference="${name}">
      <material>Gazebo/${material}</material>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="sphere_link" params="name radius mass origin_xyz origin_rpy visual_mesh material collision_mesh">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${2*mass*radius*radius/5}" ixy="0.0" ixz="0.0"
                 iyy="${2*mass*radius*radius/5}" iyz="0.0"
                 izz="${2*mass*radius*radius/5}" />
      </inertial>
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="${visual_mesh}"/>
        </geometry>
        <material name="${material}"/>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="${collision_mesh}"/>
        </geometry>
      </collision>
    </link>
<!--    <gazebo reference="${name}">
      <material>Gazebo/${material}</material>
    </gazebo> -->
  </xacro:macro>

  <xacro:macro name="virtual_link_sphere" params="name radius mass origin_xyz origin_rpy">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${2*mass*radius*radius/5}" ixy="0.0" ixz="0.0"
                 iyy="${2*mass*radius*radius/5}" iyz="0.0"
                 izz="${2*mass*radius*radius/5}" />
      </inertial>
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <sphere radius="${radius}"/>
        </geometry>
        <material name="Gray"/>
      </visual>
    </link>
  </xacro:macro>

  <xacro:property name="virtual_link_mass" value="0.1"/>
  <xacro:property name="virtual_link_radius" value="0.05"/>
  <xacro:property name="virtual_link_height" value="0.05"/>
  <xacro:macro name="virtual_link" params="name origin_xyz origin_rpy">
    <link name="${name}">
      <inertial>
        <mass value="${virtual_link_mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${(virtual_link_mass*(3*virtual_link_radius*virtual_link_radius + virtual_link_height*virtual_link_height))/12}" ixy="0.0" ixz="0.0"
                 iyy="${(virtual_link_mass*(3*virtual_link_radius*virtual_link_radius + virtual_link_height*virtual_link_height))/12}" iyz="0.0"
                 izz="${(virtual_link_mass*virtual_link_radius*virtual_link_radius)/2}" />
      </inertial>
    </link>
  </xacro:macro>

  <!-- May 2015: However zero mass/inertials links are still useful. (And removed with gz sdf)
  This macro here was added to allow fixed links to have (almost) no effect on the output compound
  sdf mass and inertia
  -->
  <xacro:property name="massless_virtual_link_mass" value="0.0000001"/>
  <xacro:property name="massless_virtual_link_radius" value="0.0000001"/>
  <xacro:property name="massless_virtual_link_height" value="0.0000001"/>
  <xacro:macro name="massless_virtual_link" params="name origin_xyz origin_rpy">
    <link name="${name}">
      <!-- Virtual Link -->
      <inertial>
        <mass value="${massless_virtual_link_mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${(massless_virtual_link_mass*(3*massless_virtual_link_radius*massless_virtual_link_radius + massless_virtual_link_height*massless_virtual_link_height))/12}" ixy="0.0" ixz="0.0"
                 iyy="${(massless_virtual_link_mass*(3*massless_virtual_link_radius*massless_virtual_link_radius + massless_virtual_link_height*massless_virtual_link_height))/12}" iyz="0.0"
                 izz="${(massless_virtual_link_mass*massless_virtual_link_radius*massless_virtual_link_radius)/2}" />
      </inertial>
    </link>
  </xacro:macro>

  <xacro:macro name="virtual_link_with_visual" params="name origin_xyz origin_rpy mesh_filename">
    <link name="${name}">
      <!-- Virtual Link -->
      <inertial>
        <mass value="${virtual_link_mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${(virtual_link_mass*(3*virtual_link_radius*virtual_link_radius + virtual_link_height*virtual_link_height))/12}" ixy="0.0" ixz="0.0"
                 iyy="${(virtual_link_mass*(3*virtual_link_radius*virtual_link_radius + virtual_link_height*virtual_link_height))/12}" iyz="0.0"
                 izz="${(virtual_link_mass*virtual_link_radius*virtual_link_radius)/2}" />
      </inertial>
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="${mesh_filename}"/>
        </geometry>
        <material name="gold">
          <color rgba="1 0.67 0 1"/>
        </material>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="${mesh_filename}"/>
        </geometry>
      </collision>
    </link>
  </xacro:macro>

  <xacro:macro name="revolute_joint" params="jointName parent child origin_xyz origin_rpy axis *limits">
    <joint name="${jointName}" type="revolute">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="${axis}"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
      <xacro:insert_block name="limits" />
      <dynamics damping="1.0" friction="0.0"/>
    </joint>
    <gazebo reference="${jointName}">
      <provideFeedback>1</provideFeedback>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="continuous_joint" params="jointName parent child origin_xyz origin_rpy axis">
    <joint name="${jointName}" type="continuous">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="${axis}"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
    </joint>
  </xacro:macro>

  <xacro:macro name="revolute_joint_damped" params="jointName parent child origin_xyz origin_rpy axis damping friction *limits">
    <joint name="${jointName}" type="revolute">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="${axis}"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
      <dynamics damping="${damping}" friction="${friction}"/>
      <xacro:insert_block name="limits" />
    </joint>
    <gazebo reference="${jointName}">
      <provideFeedback>1</provideFeedback>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="revolute_joint_ex" params="jointName parent child origin_xyz origin_rpy axis damping friction *limits *controller_gains">
    <joint name="${jointName}" type="revolute">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="${axis}"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
      <xacro:insert_block name="limits" />
      <xacro:insert_block name="controller_gains" />
      <dynamics damping="${damping}" friction="${friction}"/>
    </joint>
    <gazebo reference="${jointName}">
      <provideFeedback>1</provideFeedback>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="floating_joint" params="jointName parent child origin_xyz origin_rpy">
    <joint name="${jointName}" type="floating">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="0 0 1"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
    </joint>
  </xacro:macro>

  <xacro:macro name="prismatic_joint_axis" params="jointName parent child origin_xyz origin_rpy axis *limits">
    <joint name="${jointName}" type="prismatic">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="${axis}"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
      <dynamics damping="1.0" friction="0.0"/>
      <xacro:insert_block name="limits" />
    </joint>
  </xacro:macro>

  <xacro:macro name="revolute_joint_axis" params="jointName parent child origin_xyz origin_rpy axis *limits">
    <joint name="${jointName}" type="revolute">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="${axis}"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
      <xacro:insert_block name="limits" />
      <dynamics damping="1.0" friction="0.0"/>
    </joint>
    <gazebo reference="${jointName}">
      <provideFeedback>1</provideFeedback>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="fixed_joint" params="jointName parent child origin_xyz origin_rpy">
    <joint name="${jointName}" type="fixed">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="0 0 1"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
    </joint>
  </xacro:macro>

  <xacro:macro name="virtual_fixed_frame_offset" params="name parentLink origin_xyz origin_rpy">
    <xacro:virtual_link name="${name}_Frame"
                    origin_rpy="0 0 0"
                    origin_xyz="0 0 0"/>

    <xacro:fixed_joint jointName="${name}_Offset"
                       parent="${parentLink}" child="${name}_Frame"
                       origin_rpy="${origin_rpy}"
                       origin_xyz="${origin_xyz}"/>
  </xacro:macro>

</robot>
