plugins {
   id 'us.ihmc.gradle.ihmc-build' version '0.0.10'
}


apply plugin: 'jacoco'

if(!rootProject.name.equals('IHMCOpenRoboticsSoftware')) { evaluationDependsOn(':IHMCOpenRoboticsSoftware') }

sourceCompatibility = 1.7
version = "${getOpenRoboticsSoftwareProject().version}"
project.ext.fullVersion = "${getOpenRoboticsSoftwareProject().ext.fullVersion}"
project.ext.vcsUrl = "${getOpenRoboticsSoftwareProject().ext.vcsUrl}"
project.ext.licenseURL = "http://www.apache.org/licenses/LICENSE-2.0.txt"
project.ext.licenseName = "Apache License, Version 2.0"
project.ext.bintrayLicenseName = "Apache-2.0"

repositories ihmc.ihmcDefaultArtifactProxies()

def strings = ['ihmc', 'robotics']
ihmc.configureForIHMCOpenSourceBintrayPublish(false, "mavenJava", "ihmc-robotics-releases", strings)

dependencies {
	testCompile group: 'junit', name: 'junit', version: '4.11'
	compile group: 'javax.vecmath', name: 'vecmath', version: '1.5.2'

	compile group: 'org.ejml', name: 'denseC64', version: '0.28'
	compile group: 'net.jafama', name: 'jafama', version: '2.1.0'
	compile group: 'kryonet', name: 'kryonet', version: '2.21'
    compile group: 'com.esotericsoftware.kryo', name: 'kryo', version: '2.20'
    compile group: 'com.esotericsoftware', name: 'jsonbeans', version: '0.7'
	compile group: 'com.github.quickhull3d', name: 'quickhull3d', version: '1.0.0'
	compile group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
	compile group: 'org.georegression' , name: 'georegression', version: '0.8'
	compile group: 'org.ddogleg' , name: 'ddogleg', version: '0.7'
	compile group: 'org.jfree', name: 'jfreechart', version: '1.0.17'
    compile group: 'gov.nist.math', name: 'jama', version: '1.0.3'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.3'
    compile group: 'jgraph', name: 'jgraph', version: '5.13.0.0'

	compile group: 'us.ihmc', name: 'IHMCOptimizerWrappers', version: '0.0.23'
    compile group: 'us.ihmc', name: 'IHMCHierachicalKinematics', version: '1.0'

	// NOTE: IHMCRoboticsToolkit should not depend on any other IHMC project(!), especially it should not depend on IHMCJavaToolkit.

    testCompile ihmc.getProjectDependency(":IHMCUnitTesting")
}

jar {
    manifest {
        attributes(
                "Created-By": "IHMC Gradle Build Script",
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": "IHMC",

                "Bundle-Name": project.name,
                "Bundle-Version": project.version,
                "Bundle-License": "${project.ext.licenseURL}",
                "Bundle-Vendor": "IHMC")
    }
}

test.finalizedBy jacocoTestReport
