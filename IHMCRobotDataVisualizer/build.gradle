buildscript {
   repositories {
      maven { url = "https://repo.gradle.org/gradle/libs-releases-local" }
      maven { url "https://plugins.gradle.org/m2/" }
      mavenLocal()
   }
   dependencies {
      classpath "gradle.plugin.us.ihmc:ihmc-build:0.4.16"
      classpath "org.gradle:gradle-kotlin-dsl:0.10.3"
   }
}
plugins {
   id "org.hidetake.ssh" version "2.9.0"
   id 'application'
}
apply plugin: "us.ihmc.ihmc-build"

ihmc.configureProjectForOpenRobotics(project)

mainDependencies {
   compile group: 'us.ihmc', name: 'euclid-core', version: '0.4.5'
   compile group: 'us.ihmc', name: 'ihmc-yovariables', version: '0.1.0'
   compile group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
   compile group: 'com.martiansoftware', name: 'jsap', version: '2.1'
   compile group: 'net.sourceforge.jmatio', name: 'jmatio', version: '1.0'
   compile group: 'us.ihmc', name: 'IHMCVideoCodecs', version: '2.1.2'
   compile group: 'us.ihmc', name: 'ihmc-commons', version: '0.11.0-alpha'
   compile group: "us.ihmc", name: "model-file-loader", version: dependencyMode
   compile group: "us.ihmc", name: "simulation-construction-set", version: dependencyMode
   compile group: "us.ihmc", name: "ihmc-communication", version: dependencyMode
   compile group: "us.ihmc", name: "ihmc-javafx-toolkit", version: dependencyMode
   compile group: "us.ihmc", name: "ihmc-java-toolkit", version: dependencyMode
   compile group: "us.ihmc", name: "ihmc-java-extensions", version: dependencyMode
   compile group: "us.ihmc", name: "ihmc-humanoid-robotics", version: dependencyMode
   compile group: "us.ihmc", name: "ihmc-robotics-toolkit", version: dependencyMode
   compile group: "us.ihmc", name: "ihmc-graphics-description", version: dependencyMode
   compile group: "us.ihmc", name: "ihmc-robot-description", version: dependencyMode
   compile group: "us.ihmc", name: "ihmc-robot-data-logger", version: dependencyMode
}

testDependencies {
   compile group: 'junit', name: 'junit', version: '4.11'
}

mainClassName = hasProperty('mainClass') ? mainClass : "us.ihmc.robotDataVisualizer.visualizer.SCSVisualizer"

task viewerStartScripts(type: CreateStartScripts) {
   outputDir = file("build/scripts")
   mainClassName = "us.ihmc.robotDataVisualizer.gui.GUICaptureViewer"
   applicationName = "IHMCGUICaptureViewer"
   classpath = project.configurations.runtime + jar.outputs.files
}

distributions {
   guiCaptureViewer {
      baseName = "IHMCGUICaptureViewer"
      contents {
         into('lib') {
            from project.configurations.runtime + jar.outputs.files
         }

         into('bin') {
            from viewerStartScripts
            include "IHMCGUICaptureViewer*"
         }
      }
   }
}

task setupDeployViewerRemote << {
   def deployViewerUserValue = project.hasProperty("deployViewerUser") ? project.deployViewerUser : "invalid"
   def deployViewerPasswordValue = project.hasProperty("deployViewerPassword") ? project.deployViewerPassword : "invalid"
   def deployViewerHostValue = project.hasProperty("deployViewerHost") ? project.deployViewerHost : "invalid"

   remotes.create('deployViewerTarget') {
      host = deployViewerHostValue
      user = deployViewerUserValue
      password = deployViewerPasswordValue
      knownHosts = allowAnyHosts
   }
}

task deployViewer(dependsOn: [guiCaptureViewerDistTar, setupDeployViewerRemote]) << {
   ssh.run {
      session(remotes.deployViewerTarget) {
         project.logger.lifecycle("Copying GUI Capture Viewer distribution tarball to remote host")
         def distTarFile = guiCaptureViewerDistTar.outputs.files.singleFile
         put from: distTarFile, into: "."

         project.logger.lifecycle("Untarring distribution on remote host")
         execute "tar xf ./${distTarFile.name}"
         project.logger.lifecycle("Removing tarball from remote host")
         execute "rm -f ./${distTarFile.name}"
         project.logger.lifecycle("Moving GUI Capture Viewer distribution in to place")
         execute "mv ./${distTarFile.name.replace(".tar", "")} IHMCGUICaptureViewer"
         project.logger.lifecycle("GUI Capture Viewer deployment to remote host complete!")
      }
   }
}
