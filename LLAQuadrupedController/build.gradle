buildscript{repositories{maven{url = "https://repo.gradle.org/gradle/libs-snapshots-local"}}}

plugins {
   id "us.ihmc.build.ihmc-build" version "0.3.34"
}

ihmc.configureProjectForOpenRobotics(project)

dependencies {
   compile group: 'us.ihmc', name: 'euclid-core', version: '0.4.5'
   compile group: 'us.ihmc', name: 'ihmc-yovariables', version: '0.1.0'
   compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
   compile group: 'us.ihmc', name: 'ihmc-commons', version: '0.11.0-alpha'
   compile ihmc.getBuildVersion("us.ihmc", "ihmc-quadruped-robotics", dependencyMode)
   compile ihmc.getBuildVersion("us.ihmc", "ihmc-java-toolkit", dependencyMode)
   compile ihmc.getBuildVersion("us.ihmc", "ihmc-java-extensions", dependencyMode)
   compile ihmc.getBuildVersion("us.ihmc", "ihmc-robotics-toolkit", dependencyMode)
   compile ihmc.getBuildVersion("us.ihmc", "ihmc-communication", dependencyMode)
   compile ihmc.getBuildVersion("us.ihmc", "model-file-loader", dependencyMode)
   compile ihmc.getBuildVersion("us.ihmc", "ihmc-humanoid-robotics", dependencyMode)
   compile ihmc.getBuildVersion("us.ihmc", "ihmc-state-estimation", dependencyMode)
   compile ihmc.getBuildVersion("us.ihmc", "ihmc-graphics-description", dependencyMode)
   compile ihmc.getBuildVersion("us.ihmc", "sensor-processing", dependencyMode)
   compile ihmc.getBuildVersion("us.ihmc", "ihmc-robot-description", dependencyMode)
   compile ihmc.getBuildVersion("us.ihmc", "ihmc-robot-models", dependencyMode)

   testCompile group: 'us.ihmc', name: 'ihmc-continuous-integration-framework', version: '0.9.4'
   testCompile group: 'junit', name: 'junit', version: '4.11'
   testCompile group: 'us.ihmc', name: 'ihmc-commons-testing', version: '0.11.0-alpha'
   testCompile ihmc.getBuildVersion("us.ihmc", "ihmc-robotics-toolkit", dependencyMode)
   testCompile ihmc.getBuildVersion("us.ihmc", "ihmc-java-extensions", dependencyMode)
}

// Do not disable/remove this block to make your compile work. It will break the Quarduped deployment infrastructure.
afterEvaluate {
   project.configurations.runtime.each {
      if (it.name.contains("SimulationConstructionSet") || it.name.contains("IHMCJMonkeyEngineToolkit"))
      {
         throw new GradleException("LLAQuardupedController cannot depend on SimulationConstructionSet in order to optimize Ahead-of-Time compilation. Please fix your dependency graph. Note that testCompile dependencies are fine.")
      }
   }
}

jar {
   List depend = []
   configurations.runtime.each {
      depend.add('lib/' + it.name)
   }

   manifest {
      attributes(
            "Created-By": "IHMC Gradle Build Script",
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Implementation-Vendor": "IHMC",

            "Bundle-Name": project.name,
            "Bundle-Version": project.version,
            "Bundle-License": "${project.ext.licenseURL}",
            "Bundle-Vendor": "IHMC",
            'Class-Path': depend.join(' '))
   }
}

task install(dependsOn: ['jar']) {
   doLast {
      def projectDir = project.buildscript.sourceFile.parent

      File dest = new File(project.rootDir, 'install')

      File libdest = new File(dest, 'lib')
      dest.mkdir();
      libdest.mkdir();


      configurations.runtime.each {
         def fileToCopy = it.toString()
         copy {
            from fileToCopy
            into libdest
         }
      }

      copy {
         from jar.archivePath
         into dest
         rename(jar.archiveName, 'LLAQuadrupedController.jar')
      }

      File scriptDir = new File(projectDir, "launchScripts/local")
      copy {
         from scriptDir
         into dest
      }
   }
}
