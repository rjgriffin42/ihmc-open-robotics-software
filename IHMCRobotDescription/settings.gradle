/**
 * This file performs the following 2 operations:
 *
 * Setup source sets as projects to correct inconsistent classpaths
 * across IDEs and Gradle. From "extraSourceSets" property.
 *
 * Parse this project's build.gradle for dependencies in group "us.ihmc"
 * and recursively search for those builds on disk and include them as
 * composite builds.
 *
 * This file is needed until Gradle implements the following features:
 * - Allow nested composite builds (https://github.com/gradle/gradle/issues/1909)
 *
 * THIS FILE IS AUTO-GENERATED BY THE IHMC BUILD GRADLE PLUGIN
 * To disable auto-generation, set "disableSettingsGeneration = true"
 * in the gradle.properties file.
 *
 * Required properties:
 *
 * hyphenatedName = your-project-hyphenated
 * pascalCasedName = YourProjectPascalCased
 * extraSourceSets = [] (ex. ["test", "visualizers"]
 * publishMode = SNAPSHOT (default)
 * dependencyMode = SNAPSHOT-LATEST (default)
 * depthFromWorkspaceDirectory = 1 (default)
 * includeBuildsFromWorkspace = true (default)
 * excludeFromCompositeBuild = false (default)
 *
 * Optional properties:
 *
 * disableSettingsGeneration = false (optionally disable auto-write this file)
 * useLegacySourceSets = false (does not work yet)
 */

buildscript {
   repositories {
      maven { url = "https://repo.gradle.org/gradle/libs-releases-local" }
      maven { url "https://plugins.gradle.org/m2/" }
      mavenLocal()
   }
   dependencies {
      classpath "gradle.plugin.us.ihmc:ihmc-build:0.5.10"
      classpath "org.gradle:gradle-kotlin-dsl:0.10.3"
   }
}

import us.ihmc.build.IHMCSettingsConfigurator

/**
 * Browse source at https://github.com/ihmcrobotics/ihmc-build
 */
def ihmcSettingsConfigurator = new IHMCSettingsConfigurator(settings, logger, ext)
ihmcSettingsConfigurator.checkRequiredPropertiesAreSet() // Give friendly errors for unset properties
ihmcSettingsConfigurator.configureProjectName(hyphenatedName) // rootProject.name = hyphenatedName
ihmcSettingsConfigurator.configureExtraSourceSets(extraSourceSets) // Setup source sets to be multi-project subprojects

if (Boolean.valueOf(includeBuildsFromWorkspace))
{
   ihmcSettingsConfigurator.findAndIncludeCompositeBuilds() // Search workspace and `includeBuild` matches
}
