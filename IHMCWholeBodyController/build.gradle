plugins {
   id 'us.ihmc.gradle.ihmc-build' version '0.0.7'
}



if(!rootProject.name.equals('IHMCOpenRoboticsSoftware')) { evaluationDependsOn(':IHMCOpenRoboticsSoftware') }

sourceCompatibility = 1.7
version = "${getOpenRoboticsSoftwareProject().version}"
project.ext.fullVersion = "${getOpenRoboticsSoftwareProject().ext.fullVersion}"
project.ext.licenseURL = "http://gnu.org/licenses/gpl-3.0.txt"
project.ext.licenseName = "GPLv3"
project.ext.bintrayLicenseName = "GPL-3.0"

repositories ihmc.ihmcDefaultArtifactProxies()


dependencies {
	testCompile group: 'junit', name: 'junit', version: '4.11'
	compile group: 'us.ihmc.thirdparty.net.java.java3d', name: 'vecmath', version: '1.5.2'
	  
    compile group: 'commons-net', name: 'commons-net', version: '3.3'
	compile group: 'org.ejml', name: 'all', version: '0.28'
	compile group: 'org.yaml', name: 'snakeyaml', version: '1.13' //1.11
	compile group: 'us.ihmc', name: 'IHMCRealtime', version: '1.1.2'
	
	compile ihmc.getProjectDependency(":CommonWalkingControlModules")
	compile ihmc.getProjectDependency(":IHMCCommunication")
	compile ihmc.getProjectDependency(":IHMCHumanoidRobotics")
	
	compile ihmc.getProjectDependency(":SDFLoader")
	compile ihmc.getProjectDependency(":SensorProcessing")
	compile ihmc.getProjectDependency(":SimulationConstructionSet")
	compile ihmc.getProjectDependency(":IHMCJavaToolkit")
	compile ihmc.getProjectDependency(":IHMCRoboticsToolkit")
	testCompile ihmc.getProjectDependency(":IHMCUnitTesting")
}

jar {
    manifest {
        attributes(
                "Created-By": "IHMC Gradle Build Script",
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": "IHMC",

                "Bundle-Name": project.name,
                "Bundle-Version": project.version,
                "Bundle-License": "${project.ext.licenseURL}",
                "Bundle-Vendor": "IHMC")
    }
}
