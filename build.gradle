apply plugin: 'java'
apply plugin: 'maven-publish'

sourceCompatibility = 1.7
version = '0.7.0'
rootProject.ext.vcsUrl = "https://bitbucket.org/ihmcrobotics/ihmc-open-robotics-software.git"

if(buildType.equals("SNAPSHOT"))
{
  getGitHash()
  getDate()
  version += "-SNAPSHOT+date.${project.ext.date}.hash.${project.ext.revision}"
}

buildscript {
  repositories {
    mavenLocal()
	  jcenter()
	  mavenCentral()
  }
}

repositories {
  mavenLocal()

  maven {
    url "https://bengal.ihmc.us/nexus/content/repositories/releases/"
  }

  maven {
      url "https://bengal.ihmc.us/nexus/content/repositories/thirdparty/"
  }

  maven {
      url "https://bengal.ihmc.us/nexus/content/repositories/central/"
  }

  jcenter()

  mavenCentral()
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'maven-publish'

  buildscript {
    repositories {
      mavenLocal()
  	  jcenter()
  	  mavenCentral()
    }
  }

  task sourceJar(type: Jar) {
    from sourceSets.main.allJava
  }

  publishing {
    publications {
      mavenJava(MavenPublication) {

        groupId 'us.ihmc'
        artifactId "${project.name}"
        version "${rootProject.version}"

        from components.java

        artifact sourceJar {
          classifier "sources"
        }

        pom.withXml {
          def licenseNode = asNode().appendNode('licenses').appendNode('license')
          licenseNode.appendNode('name', project.ext.licenseName)
          licenseNode.appendNode('url', project.ext.licenseURL)
        }
      }
    }
  }
}

task buildInfo {
  doFirst {
    getDate()
    getGitHash()
  }
}

private void getGitHash() {
  def cmd = "git rev-parse --short HEAD"
  def proc = cmd.execute()
  project.ext.revision = proc.text.trim()
}

private void getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy.MM.dd.HH.mm')
    project.ext.date = formattedDate
}
