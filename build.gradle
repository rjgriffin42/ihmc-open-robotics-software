import us.ihmc.commons.exception.DefaultExceptionHandler
import us.ihmc.commons.nio.FileTools

import java.nio.file.Files

buildscript {
   repositories {
      maven { url = "https://repo.gradle.org/gradle/libs-releases-local" }
      maven { url "https://plugins.gradle.org/m2/" }
      mavenLocal()
      jcenter()
   }
   dependencies {
      classpath "gradle.plugin.us.ihmc:ihmc-build:0.4.17"
      classpath "org.gradle:gradle-kotlin-dsl:0.10.3"
      classpath 'us.ihmc:ihmc-commons:0.11.2'
   }
}
apply plugin: "us.ihmc.ihmc-build"

task generateSubprojectSettings {

   project.projectDir.list().each { childDir ->
      if (new File(project.projectDir, childDir + "/build.gradle").exists())
      {
         settings.writeSettingsFileToProject(new File(project.projectDir, childDir))
      }
   }

//   doLast {
//      gradle.includedBuilds.each {
//
//         def dependencies = settings.findTransitiveProjectDependencies(it)
//
//         settings.generateSettingsFile(it.projectDir, dependencies)
//         println(it.name + ": " + dependencies)
//      }
//
//      gradle.includedBuilds.each {
//         settings.deleteDependenciesFile(it.projectDir)
//      }
//   }
}

task deleteTests {
   gradle.includedBuilds.each {
      dependsOn it.task(":deleteTests")
   }
}

task copyTests {
   gradle.includedBuilds.each {
      dependsOn it.task(":copyTests")
   }
}

task printDependenciesFiles {
   gradle.includedBuilds.each {
      dependsOn it.task(":printDependenciesFile")
   }
}

task deleteDependenciesFiles {
   gradle.includedBuilds.each {
      dependsOn it.task(":deleteDependenciesFile")
   }
}
