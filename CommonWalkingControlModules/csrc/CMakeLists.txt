cmake_minimum_required(VERSION 2.6)
project(CommonWalkingControlModules)

include_directories(${JNI_INCLUDE_DIRS})

if(WIN32)
	set(CMAKE_C_FLAGS_MINSIZEREL "${CMAKE_C_FLAGS_MINSIZEREL} /MT")
	set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} /MT")
endif(WIN32)

add_library(LeeGoswamiForceOptimizer SHARED LeeGoswamiForceOptimizerNative.c leeGoswamiForceOptimizer/util.c leeGoswamiForceOptimizer/solver.c leeGoswamiForceOptimizer/matrix_support.c leeGoswamiForceOptimizer/ldl.c)
if(NOT WIN32)
	target_link_libraries(LeeGoswamiForceOptimizer m)
	if(APPLE)
		set_target_properties(LeeGoswamiForceOptimizer PROPERTIES SUFFIX .jnilib)
	endif(APPLE)
endif()

add_library(LeeGoswamiCoPAndNormalTorqueOptimizer SHARED LeeGoswamiCoPAndNormalTorqueOptimizerNative.c leeGoswamiCoPAndNormalTorqueOptimizer/util.c leeGoswamiCoPAndNormalTorqueOptimizer/solver.c leeGoswamiCoPAndNormalTorqueOptimizer/matrix_support.c leeGoswamiCoPAndNormalTorqueOptimizer/ldl.c)
if(NOT WIN32)
	target_link_libraries(LeeGoswamiCoPAndNormalTorqueOptimizer m)
	if(APPLE)
		set_target_properties(LeeGoswamiCoPAndNormalTorqueOptimizer PROPERTIES SUFFIX .jnilib)
	endif(APPLE)
endif()

add_library(ContactPointWrenchOptimizer SHARED ContactPointWrenchOptimizerNative.c contactPointWrenchOptimizer/util.c contactPointWrenchOptimizer/solver.c contactPointWrenchOptimizer/matrix_support.c contactPointWrenchOptimizer/ldl.c)
if(NOT WIN32)
	target_link_libraries(ContactPointWrenchOptimizer m)
	if(APPLE)
		set_target_properties(ContactPointWrenchOptimizer PROPERTIES SUFFIX .jnilib)
	endif(APPLE)
endif()
INSTALL(TARGETS LeeGoswamiForceOptimizer LeeGoswamiCoPAndNormalTorqueOptimizer ContactPointWrenchOptimizer RUNTIME DESTINATION lib LIBRARY DESTINATION lib)
