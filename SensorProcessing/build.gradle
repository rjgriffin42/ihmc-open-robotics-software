buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.us.ihmc.gradle:ihmc-build:0.0.18"
  }
}

apply plugin: "us.ihmc.gradle.ihmc-build"

if (!rootProject.name.equals('IHMCOpenRoboticsSoftware')) {
    evaluationDependsOn(':IHMCOpenRoboticsSoftware')
}

sourceCompatibility = 1.7
version = "${getOpenRoboticsSoftwareProject().version}"
project.ext.fullVersion = "${getOpenRoboticsSoftwareProject().ext.fullVersion}"
project.ext.vcsUrl = "${getOpenRoboticsSoftwareProject().ext.vcsUrl}"
project.ext.licenseURL = "http://www.apache.org/licenses/LICENSE-2.0.txt"
project.ext.licenseName = "Apache License, Version 2.0"
project.ext.bintrayLicenseName = "Apache-2.0"

repositories ihmc.ihmcDefaultArtifactProxies()

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven {
        url "https://bengal.ihmc.us/nexus/content/repositories/thirdparty/"
    }
}

def strings = ['ihmc', 'robotics']
ihmc.configureForIHMCOpenSourceBintrayPublish(false, "mavenJava", "maven-release", strings)

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'

    compile group: 'javax.vecmath', name: 'vecmath', version: '1.5.2'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.1'
    compile group: 'org.georegression', name: 'georegression', version: '0.8'
    compile group: 'org.boofcv', name: 'visualize', version: '0.19'
    compile group: 'org.ddogleg', name: 'ddogleg', version: '0.7'
//    compile group: 'org.projectbubo', name: 'ProjectBUBO', version: '160309'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.3'
    compile group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.7'
    compile group: 'org.jgrapht', name: 'jgrapht-core', version: '0.9.0'
    compile group: 'org.jgrapht', name: 'jgrapht-ext', version: '0.9.0'
    compile group: 'com.github.wendykierp', name: 'JTransforms', version: '3.1'
    compile group: 'org.ejml', name: 'dense64', version: '0.28'
    compile group: 'org.ejml', name: 'core', version: '0.28'
    compile group: 'org.boofcv', name: 'io', version: '0.19'
    compile group: 'org.boofcv', name: 'ip', version: '0.19'
    compile group: 'org.boofcv', name: 'geo', version: '0.19'
    compile group: 'org.boofcv', name: 'calibration', version: '0.19'
    compile group: 'jgraph', name: 'jgraph', version: '5.13.0.0'
    compile group: 'us.ihmc', name: 'IHMCRealtime', version: '1.1.2'
    compile group: 'us.ihmc.thirdparty.jme', name: 'jme3-core', version: '3.1.0-internal4'

    compile ihmc.getProjectDependency(":IHMCCommunication")
    compile ihmc.getProjectDependency(":Graphics3DAdapter")
    compile ihmc.getProjectDependency(":SimulationConstructionSet")
    compile ihmc.getProjectDependency(":KalmanProject")
    compile ihmc.getProjectDependency(":SDFLoader")
    compile ihmc.getProjectDependency(":IHMCJavaToolkit")
    compile ihmc.getProjectDependency(":IHMCRoboticsToolkit")
    compile ihmc.getProjectDependency(":IHMCGraphics3DDescription")

    testCompile ihmc.getProjectDependency(":IHMCUnitTesting")
    testCompile ihmc.getProjectTestDependency(":IHMCRoboticsToolkit")
}

jar {
    manifest {
        attributes(
                "Created-By": "IHMC Gradle Build Script",
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": "IHMC",

                "Bundle-Name": project.name,
                "Bundle-Version": project.version,
                "Bundle-License": "${project.ext.licenseURL}",
                "Bundle-Vendor": "IHMC")
    }
}
