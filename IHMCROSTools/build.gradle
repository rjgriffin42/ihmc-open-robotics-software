plugins {
   id 'us.ihmc.gradle.ihmc-build' version '0.0.9'
}



if(!rootProject.name.equals('IHMCOpenRoboticsSoftware')) { evaluationDependsOn(':IHMCOpenRoboticsSoftware') }

sourceCompatibility = 1.7
version = "${getOpenRoboticsSoftwareProject().version}"
project.ext.fullVersion = "${getOpenRoboticsSoftwareProject().ext.fullVersion}"
project.ext.vcsUrl = "${getOpenRoboticsSoftwareProject().ext.vcsUrl}"
project.ext.licenseURL = "http://www.apache.org/licenses/LICENSE-2.0.txt"
project.ext.licenseName = "Apache License, Version 2.0"
project.ext.bintrayLicenseName = "Apache-2.0"

repositories ihmc.ihmcDefaultArtifactProxies()

def strings = ['ihmc', 'robotics']
ihmc.configureForIHMCOpenSourceBintrayPublish(false, "mavenJava", "ihmc-robotics-releases", strings)

evaluationDependsOn(ihmc.getProjectDependencyGradlePath("ROSJava"))
dependencies {
	testCompile group: 'junit', name: 'junit', version: '4.11'

    compile group: 'io.netty', name: 'netty', version: '3.5.8.Final'
    compile group: 'us.ihmc.thirdparty.net.java.java3d', name: 'vecmath', version: '1.5.2'
	compile group: 'commons-pool', name: 'commons-pool', version: '1.6'
	compile group: 'commons-logging', name: 'commons-logging', version: '1.1.3'
	compile group: 'log4j', name: 'log4j', version: '1.2.17'
	compile ihmc.getProjectDependency(":ROSJava")
	testCompile ihmc.getProjectDependency(":ROSJava").sourceSets.test.output
 	compile ihmc.getProjectDependency(":ROSJavaBootstrap")
 	compile ihmc.getProjectDependency(":ROSJavaMessages")
 	compile ihmc.getProjectDependency(":ROSJavaGeometry")
 	//compile ihmc.getProjectDependency(":Graphics3DAdapter")

 	compile ihmc.getProjectDependency(":IHMCCommunication")
 	//compile ihmc.getProjectDependency(":Vicon")
	compile ihmc.getProjectDependency(":IHMCJavaToolkit")
	compile ihmc.getProjectDependency(":IHMCRoboticsToolkit")
	testCompile ihmc.getProjectDependency(":IHMCUnitTesting")
}
jar {
    manifest {
        attributes(
                "Created-By": "IHMC Gradle Build Script",
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": "IHMC",

                "Bundle-Name": project.name,
                "Bundle-Version": project.version,
                "Bundle-License": "${project.ext.licenseURL}",
                "Bundle-Vendor": "IHMC")
    }
}
