plugins {
   id 'us.ihmc.gradle.ihmc-build' version '0.0.14'
}



if(!rootProject.name.equals('IHMCOpenRoboticsSoftware')) { evaluationDependsOn(':IHMCOpenRoboticsSoftware') }

sourceCompatibility = 1.7
version = "${getOpenRoboticsSoftwareProject().version}"
project.ext.fullVersion = "${getOpenRoboticsSoftwareProject().ext.fullVersion}"
project.ext.vcsUrl = "${getOpenRoboticsSoftwareProject().ext.vcsUrl}"
project.ext.licenseURL = "http://www.apache.org/licenses/LICENSE-2.0.txt"
project.ext.licenseName = "Apache License, Version 2.0"
project.ext.bintrayLicenseName = "Apache-2.0"


repositories ihmc.ihmcDefaultArtifactProxies()

repositories {
	maven {
		url "https://bengal.ihmc.us/nexus/content/repositories/thirdparty/"
	}
}

repositories {
   mavenLocal()
   jcenter()
   mavenCentral()
}

def strings = ['ihmc', 'robotics']
ihmc.configureForIHMCOpenSourceBintrayPublish(false, "mavenJava", "ihmc-robotics-releases", strings)

evaluationDependsOn(ihmc.getProjectDependencyGradlePath("IHMCRoboticsToolkit"))
evaluationDependsOn(ihmc.getProjectDependencyGradlePath("IHMCJavaToolkit"))
evaluationDependsOn(ihmc.getProjectDependencyGradlePath("CommonWalkingControlModules"))
evaluationDependsOn(ihmc.getProjectDependencyGradlePath("IHMCCommunication"))
evaluationDependsOn(ihmc.getProjectDependencyGradlePath("IHMCHumanoidRobotics"))
evaluationDependsOn(ihmc.getProjectDependencyGradlePath("IHMCROSTools"))

dependencies {
	testCompile group: 'junit', name: 'junit', version: '4.11'
	compile group: 'javax.vecmath', name: 'vecmath', version: '1.5.2'

	// compile group: 'com.jme3', name: 'jme3-jbullet', version: '3.1.0-SNAPSHOT'
	// compile group: 'com.jme3', name: 'jme3-jbullet', version: '3.0.10'
	compile group: 'us.ihmc.thirdparty.jme', name: 'jme3-jbullet', version: '3.1.0-internal2'
	compile group: 'io.netty', name: 'netty', version: '3.9.0.Final' //'3.5.8.Final'
	compile group: 'com.martiansoftware', name: 'jsap', version: '2.1'
	compile group: 'org.boofcv', name: 'all', version: '0.19'
	compile group: 'org.georegression' , name: 'georegression', version: '0.8'
	compile group: 'org.projectbubo', name: 'ProjectBUBO', version: '160212'

	compile group: 'org.ejml', name: 'all', version: '0.28'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
	compile group: 'org.ddogleg' , name: 'ddogleg', version: '0.7'
   	compile group: 'us.ihmc.thirdparty.jinput', name: 'jinput', version: '160212'
	compile group: 'org.javassist', name: 'javassist', version: '3.18.1-GA'
	compile group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.7'
	compile group: 'com.jcraft', name: 'jsch', version: '0.1.51'
	compile group: 'commons-codec', name: 'commons-codec', version: '1.9'
	compile group: 'org.apache.commons', name: 'commons-math3', version: '3.3'
	compile group: 'org.bidib.jbidib.org.qbang.rxtx', name: 'rxtxcomm', version: '2.2'
	compile group: 'com.google.guava', name: 'guava', version: '17.0'
	compile group: 'us.ihmc', name: 'IHMCRealtime', version: '1.1.2'
	compile group: 'org.ros.rosjava_core', name: 'rosjava', version: '0.2.1'
	compile group: 'org.ros.rosjava_core', name: 'rosjava_geometry', version: '0.2.1'
	compile group: 'org.ros.rosjava_bootstrap', name: 'message_generation', version: '0.2.1'
	compile group: 'org.ros.rosjava_bootstrap', name: 'gradle_plugins', version: '0.2.1'

	compile ihmc.getProjectDependency(":IHMCROSTools")
	compile ihmc.getProjectDependency(":CommonWalkingControlModules")
	compile ihmc.getProjectDependency(":Graphics3DAdapter")

	compile ihmc.getProjectDependency(":IHMCSystemIdentification")

	compile ihmc.getProjectDependency(":ImageProcessing")
    compile ihmc.getProjectDependency(":Plotting")
	compile ihmc.getProjectDependency(":RobotDataCommunication")
	compile ihmc.getProjectDependency(":SDFLoader")
	compile ihmc.getProjectDependency(":SensorProcessing")
	compile ihmc.getProjectDependency(":SimulationConstructionSet")
	compile ihmc.getProjectDependency(":IHMCCommunication")
	compile ihmc.getProjectDependency(":IHMCHumanoidBehaviors")
	compile ihmc.getProjectDependency(":IHMCHumanoidRobotics")
    compile ihmc.getProjectDependency(":IHMCPerception")
    compile ihmc.getProjectDependency(":IHMCWholeBodyController")
	compile ihmc.getProjectDependency(":IHMCStateEstimation")
	compile ihmc.getProjectDependency(":IHMCJavaToolkit")
	compile ihmc.getProjectDependency(":IHMCRoboticsToolkit")
	compile ihmc.getProjectDependency(":Vicon")

    testCompile ihmc.getProjectDependency(":IHMCUnitTesting")
	testCompile ihmc.getProjectDependency(":CommonWalkingControlModules").sourceSets.test.output
	testCompile ihmc.getProjectDependency(":IHMCJavaToolkit").sourceSets.test.output
	testCompile ihmc.getProjectDependency(":IHMCHumanoidRobotics").sourceSets.test.output
	testCompile ihmc.getProjectDependency(":IHMCJavaToolkit").sourceSets.test.output
	testCompile ihmc.getProjectDependency(":IHMCCommunication").sourceSets.test.output
	testCompile ihmc.getProjectDependency(":IHMCRoboticsToolkit").sourceSets.test.output
}

jar {
   manifest {
      attributes(
              "Created-By": "IHMC Gradle Build Script",
              "Implementation-Title": project.name,
              "Implementation-Version": project.version,
              "Implementation-Vendor": "IHMC",

              "Bundle-Name": project.name,
              "Bundle-Version": project.version,
              "Bundle-License": "${project.ext.licenseURL}",
              "Bundle-Vendor": "IHMC")
   }
}
